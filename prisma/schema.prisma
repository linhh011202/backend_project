generator client {
    provider = "prisma-client-js"
    output   = "generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Permission {
    id              Int              @id @default(autoincrement())
    name            String           @db.VarChar(100)
    rolePermissions RolePermission[]

    @@map("permissions")
}

model Role {
    id              Int              @id @default(autoincrement())
    name            String           @db.VarChar(100)
    rolePermissions RolePermission[]
    users           User[]

    @@map("roles")
}

model RolePermission {
    roleId       Int        @map("role_id")
    permissionId Int        @map("permission_id")
    permission   Permission @relation(fields: [permissionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    role         Role       @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)

    @@id([roleId, permissionId])
    @@map("role_permissions")
}

model User {
    id       Int     @id @default(autoincrement())
    name     String  @db.VarChar(100)
    username String  @unique @db.VarChar(100)
    password String  @db.VarChar(255)
    roleId   Int     @map("role_id")
    role     Role    @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)

    @@map("users")
}

// middlewares
// guards
// pre interceptors -> cache
// pipes -> validation
// controller -> handle business login
// post interceptors
// error handler
